<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="2037" started-at="2018-04-10T09:37:43Z" finished-at="2018-04-10T09:37:45Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="2037" started-at="2018-04-10T09:37:43Z" finished-at="2018-04-10T09:37:45Z">
      <class name="test.BaseTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:test.BaseTest@18e6b72b]" name="setup" is-config="true" duration-ms="13748" started-at="2018-04-10T17:37:29Z" finished-at="2018-04-10T17:37:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="loadlog4J()[pri:0, instance:test.BaseTest@18e6b72b]" name="loadlog4J" is-config="true" duration-ms="70" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadlog4J -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.BaseTest@18e6b72b]" name="beforeMethod" is-config="true" duration-ms="7" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.BaseTest.testRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.BaseTest@18e6b72b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRequest status=SKIP method=BaseTest.testRequest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.BaseTest@18e6b72b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.BaseTest@18e6b72b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.BaseTest.testRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.BaseTest@18e6b72b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRequest status=SKIP method=BaseTest.testRequest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.BaseTest@18e6b72b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testRequest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.BaseTest@18e6b72b]" name="testRequest" duration-ms="92" started-at="2018-04-10T17:37:43Z" data-provider="csvdataprovider" finished-at="2018-04-10T17:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[generate_token_accounts_section_3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user sends a GET request]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[critical]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[/json/Accounts/#application/json]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 2
	at helper.RestMe.getMe(RestMe.java:71)
	at test.BaseTest.performAction(BaseTest.java:186)
	at test.BaseTest.testRequest(BaseTest.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:205)
	at helper.IHookableListener.run(IHookableListener.java:49)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:641)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.BaseTest@18e6b72b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.BaseTest.testRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.BaseTest@18e6b72b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRequest status=FAILURE method=BaseTest.testRequest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.BaseTest@18e6b72b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.BaseTest@18e6b72b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.BaseTest.testbogas()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testbogas()[pri:0, instance:test.BaseTest@18e6b72b]" name="testbogas" duration-ms="4" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[2]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 2
	at helper.IHookableListener.run(IHookableListener.java:46)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:641)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testbogas -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.BaseTest@18e6b72b]" name="afterMethod" is-config="true" duration-ms="49" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testbogas status=FAILURE method=BaseTest.testbogas()[pri:0, instance:test.BaseTest@18e6b72b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:test.BaseTest@18e6b72b]" name="endTest" is-config="true" duration-ms="1542" started-at="2018-04-10T17:37:43Z" finished-at="2018-04-10T17:37:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.BaseTest@18e6b72b]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-04-10T17:37:45Z" finished-at="2018-04-10T17:37:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.BaseTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
